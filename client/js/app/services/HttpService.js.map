{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","res","ok","Error","statusText","url","fetch","then","_handleErrors","json","dado","headers","method","body","JSON","stringify"],"mappings":";;;;;;IAAMA,W;;;;;;;sCAEYC,G,EAAK;AACf,gBAAG,CAACA,IAAIC,EAAR,EAAY,MAAM,IAAIC,KAAJ,CAAUF,IAAIG,UAAd,CAAN;AACZ,mBAAOH,GAAP;AACH;;;4BAEGI,G,EAAK;AAAA;;AAEL,mBAAOC,MAAMD,GAAN,EACFE,IADE,CACG;AAAA,uBAAO,MAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,aADH,EAEFM,IAFE,CAEG;AAAA,uBAAON,IAAIQ,IAAJ,EAAP;AAAA,aAFH,CAAP;AAIH;;;6BAEIJ,G,EAAKK,I,EAAM;AAAA;;AAEZ;;AAEA,mBAAOJ,MAAMD,GAAN,EAAW;AACdM,yBAAS,EAAC,gBAAiB,kBAAlB,EADK;AAEdC,wBAAQ,MAFM;AAGdC,sBAAMC,KAAKC,SAAL,CAAeL,IAAf;;AAHQ,aAAX,EAMNH,IANM,CAMD;AAAA,uBAAO,OAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,aANC,CAAP;AAQH;;AAEG;AACA","file":"HttpService.js","sourcesContent":["class HttpService {\r\n\r\n    _handleErrors(res) {\r\n        if(!res.ok) throw new Error(res.statusText);\r\n        return res;\r\n    }\r\n\r\n    get(url) {\r\n\r\n        return fetch(url)\r\n            .then(res => this._handleErrors(res))\r\n            .then(res => res.json());\r\n        \r\n    }\r\n\r\n    post(url, dado) {\r\n        \r\n        //NOVA API Fetch do JS\r\n\r\n        return fetch(url, {\r\n            headers: {'Content-type' : 'application/json'},\r\n            method: 'post',\r\n            body: JSON.stringify(dado)\r\n\r\n        })\r\n        .then(res => this._handleErrors(res));\r\n\r\n    }\r\n        \r\n        //Codigo usado anteriormente\r\n        /*\r\n                    return new Promise((resolve, reject) => {\r\n        \r\n                        let xhr = new XMLHttpRequest();\r\n                        xhr.open(\"POST\", url, true);\r\n                        xhr.setRequestHeader(\"Content-type\", \"application/json\");\r\n                        xhr.onreadystatechange = () => {\r\n        \r\n                            if (xhr.readyState == 4) {\r\n        \r\n                                if (xhr.status == 200) {\r\n        \r\n                                    resolve(JSON.parse(xhr.responseText));\r\n                                } else {\r\n        \r\n                                    reject(xhr.responseText);\r\n                                }\r\n                            }\r\n                        };\r\n                        xhr.send(JSON.stringify(dado)); // usando JSON.stringifly para converter objeto em uma string no formato JSON.\r\n                    });\r\n        \r\n                }\r\n                */\r\n}"]}