{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["NegociacaoService","_http","HttpService","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","then","negociacoes","periodos","reduce","dados","periodo","concat","catch","Error","erro","resolve","reject","get","map","Negociacao","Date","objeto","data","quantidade","valor","console","log","negociacao","ConnectionFactory","getConnection","NegociacaoDao","connection","dao","adiciona","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","isEquals","negociacaoExistente"],"mappings":";;;;;;IAAMA,iB;AAEF,iCAAc;AAAA;;AACV,aAAKC,KAAL,GAAa,IAAIC,WAAJ,EAAb;AACH;;;;2CAEkB;;AAEf,mBAAOC,QAAQC,GAAR,CAAY,CACf,KAAKC,wBAAL,EADe,EAEf,KAAKC,gCAAL,EAFe,EAGf,KAAKC,iCAAL,EAHe,CAAZ,EAIAC,IAJA,CAIK,oBAAY;;AAEpB,oBAAIC,cAAcC,SACbC,MADa,CACN,UAACC,KAAD,EAAQC,OAAR;AAAA,2BAAoBD,MAAME,MAAN,CAAaD,OAAb,CAApB;AAAA,iBADM,EACqC,EADrC,CAAlB;;AAGA,uBAAOJ,WAAP;AAEH,aAXM,EAWJM,KAXI,CAWE,gBAAQ;AACb,sBAAM,IAAIC,KAAJ,CAAUC,IAAV,CAAN;AACH,aAbM,CAAP;AAeH;;;mDAE0B;AAAA;;AAEvB,mBAAO,IAAId,OAAJ,CAAY,UAACe,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,sBAAKlB,KAAL,CACKmB,GADL,CACS,oBADT,EAEKZ,IAFL,CAEU,uBAAe;AACjBU,4BAAQT,YAAYY,GAAZ,CAAgB;AAAA,+BAAS,IAAIC,UAAJ,CAAe,IAAIC,IAAJ,CAASC,OAAOC,IAAhB,CAAf,EAAsCD,OAAOE,UAA7C,EAAyDF,OAAOG,KAAhE,CAAT;AAAA,qBAAhB,CAAR;AACH,iBAJL,EAKKZ,KALL,CAKW,gBAAQ;AACXa,4BAAQC,GAAR,CAAYZ,IAAZ;AACAE,2BAAO,iDAAP;AACH,iBARL;AAUH,aAZM,CAAP;AAeH;;;2DAEkC;AAAA;;AAEvB,mBAAO,IAAIhB,OAAJ,CAAY,UAACe,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,uBAAKlB,KAAL,CACKmB,GADL,CACS,sBADT,EAEKZ,IAFL,CAEU,uBAAe;AACjBU,4BAAQT,YAAYY,GAAZ,CAAgB;AAAA,+BAAS,IAAIC,UAAJ,CAAe,IAAIC,IAAJ,CAASC,OAAOC,IAAhB,CAAf,EAAsCD,OAAOE,UAA7C,EAAyDF,OAAOG,KAAhE,CAAT;AAAA,qBAAhB,CAAR;AACH,iBAJL,EAKKZ,KALL,CAKW,gBAAQ;AACXa,4BAAQC,GAAR,CAAYZ,IAAZ;AACAE,2BAAO,0DAAP;AACH,iBARL;AAUH,aAZM,CAAP;AAeX;;;4DAEmC;AAAA;;AAExB,mBAAO,IAAIhB,OAAJ,CAAY,UAACe,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,uBAAKlB,KAAL,CACKmB,GADL,CACS,uBADT,EAEKZ,IAFL,CAEU,uBAAe;AACjBU,4BAAQT,YAAYY,GAAZ,CAAgB;AAAA,+BAAS,IAAIC,UAAJ,CAAe,IAAIC,IAAJ,CAASC,OAAOC,IAAhB,CAAf,EAAsCD,OAAOE,UAA7C,EAAyDF,OAAOG,KAAhE,CAAT;AAAA,qBAAhB,CAAR;AACH,iBAJL,EAKKZ,KALL,CAKW,gBAAQ;AACXa,4BAAQC,GAAR,CAAYZ,IAAZ;AACAE,2BAAO,2DAAP;AACH,iBARL;AAUH,aAZM,CAAP;AAeX;;;iCAGQW,U,EAAY;;AAEjB,mBAAOC,kBACFC,aADE,GAEFxB,IAFE,CAEG;AAAA,uBAAc,IAAIyB,aAAJ,CAAkBC,UAAlB,CAAd;AAAA,aAFH,EAGF1B,IAHE,CAGG;AAAA,uBAAO2B,IAAIC,QAAJ,CAAaN,UAAb,CAAP;AAAA,aAHH,EAIFtB,IAJE,CAIG;AAAA,uBAAM,mCAAN;AAAA,aAJH,EAKFO,KALE,CAKI,gBAAQ;AACXa,wBAAQC,GAAR,CAAYZ,IAAZ;AACA,sBAAM,IAAID,KAAJ,CAAU,yCAAV,CAAN;AACH,aARE,CAAP;AAUH;;;gCAEO;;AAEJ,mBAAOe,kBACFC,aADE,GAEFxB,IAFE,CAEG;AAAA,uBAAc,IAAIyB,aAAJ,CAAkBC,UAAlB,CAAd;AAAA,aAFH,EAGF1B,IAHE,CAGG;AAAA,uBAAO2B,IAAIE,UAAJ,EAAP;AAAA,aAHH,EAIFtB,KAJE,CAII,gBAAQ;AACXa,wBAAQC,GAAR,CAAYZ,IAAZ;AACA,sBAAM,IAAID,KAAJ,CAAc,uCAAd,CAAN;AACH,aAPE,CAAP;AASC;;;gCAEG;;AAEJ,mBAAOe,kBACFC,aADE,GAEFxB,IAFE,CAEG;AAAA,uBAAc,IAAIyB,aAAJ,CAAkBC,UAAlB,CAAd;AAAA,aAFH,EAGF1B,IAHE,CAGG;AAAA,uBAAO2B,IAAIG,UAAJ,EAAP;AAAA,aAHH,EAIF9B,IAJE,CAIG;AAAA,uBAAM,kCAAN;AAAA,aAJH,EAKFO,KALE,CAKI,gBAAQ;AACXa,wBAAQC,GAAR,CAAYZ,IAAZ;AACA,sBAAM,IAAID,KAAJ,CAAU,sCAAV,CAAN;AACH,aARE,CAAP;AAUC;;;gCAGOuB,U,EAAY;;AAEjB,mBAAO,KAAKC,gBAAL,GACLhC,IADK,CACA;AAAA,uBACFC,YAAYgC,MAAZ,CAAmB;AAAA,2BAEnB,CAACF,WAAWG,IAAX,CAAgB;AAAA,+BAEbZ,WAAWa,QAAX,CAAoBC,mBAApB,CAFa;AAAA,qBAAhB,CAFkB;AAAA,iBAAnB,CADE;AAAA,aADA,EAQD7B,KARC,CAQK,gBAAQ;AACXa,wBAAQC,GAAR,CAAYZ,IAAZ;AACA,sBAAM,IAAID,KAAJ,CAAU,oDAAV,CAAN;AACH,aAXC,CAAP;AAcF","file":"NegociacaoService.js","sourcesContent":["class NegociacaoService {\r\n\r\n    constructor() {\r\n        this._http = new HttpService();\r\n    }\r\n\r\n    obterNegociacoes() {\r\n        \r\n        return Promise.all([\r\n            this.obterNegociacoesDaSemana(),\r\n            this.obterNegociacoesDaSemanaAnterior(),\r\n            this.obterNegociacoesDaSemanaRetrasada()\r\n            ]).then(periodos => {\r\n        \r\n            let negociacoes = periodos\r\n                .reduce((dados, periodo) => dados.concat(periodo), []);\r\n        \r\n            return negociacoes;\r\n        \r\n        }).catch(erro => {\r\n            throw new Error(erro);\r\n        });\r\n        \r\n    } \r\n\r\n    obterNegociacoesDaSemana() {\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            this._http\r\n                .get('negociacoes/semana')\r\n                .then(negociacoes => {\r\n                    resolve(negociacoes.map(objeto=> new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\r\n                })\r\n                .catch(erro => {\r\n                    console.log(erro);\r\n                    reject('Não foi possivel obter as negociacoes da semana');\r\n                })\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n    obterNegociacoesDaSemanaAnterior() {\r\n        \r\n                return new Promise((resolve, reject) => {\r\n        \r\n                    this._http\r\n                        .get('negociacoes/anterior')\r\n                        .then(negociacoes => {\r\n                            resolve(negociacoes.map(objeto=> new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\r\n                        })\r\n                        .catch(erro => {\r\n                            console.log(erro);\r\n                            reject('Não foi possivel obter as negociacoes da semana anterior');\r\n                        })\r\n        \r\n                });\r\n        \r\n        \r\n    }\r\n\r\n    obterNegociacoesDaSemanaRetrasada() {\r\n        \r\n                return new Promise((resolve, reject) => {\r\n        \r\n                    this._http\r\n                        .get('negociacoes/retrasada')\r\n                        .then(negociacoes => {\r\n                            resolve(negociacoes.map(objeto=> new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)));\r\n                        })\r\n                        .catch(erro => {\r\n                            console.log(erro);\r\n                            reject('Não foi possivel obter as negociacoes da semana retrasada');\r\n                        })\r\n        \r\n                });\r\n        \r\n        \r\n    }\r\n\r\n\r\n    cadastra(negociacao) {\r\n\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.adiciona(negociacao))\r\n            .then(() => 'Negociação adicionada com sucesso')\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possivel adicionar a negociação')\r\n            });\r\n\r\n    }\r\n\r\n    lista() {\r\n\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.listaTodos())\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error(    'Não foi possivel obter as negociações');\r\n            });\r\n            \r\n        }\r\n\r\n    apaga() {\r\n\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.apagaTodos())\r\n            .then(() => 'Negociações apagadas com sucesso')\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error('Não foi possivel apagar a negociação')\r\n            })\r\n\r\n        }\r\n\r\n\r\n        importa(listaAtual) {\r\n\r\n           return this.obterNegociacoes()\r\n            .then(negociacoes =>\r\n                negociacoes.filter(negociacao =>\r\n                \r\n                !listaAtual.some(negociacaoExistente =>\r\n                \r\n                    negociacao.isEquals(negociacaoExistente)))\r\n                )\r\n                .catch(erro => {\r\n                    console.log(erro);\r\n                    throw new Error('Não foi possivel buscar negociacoes para impoartar');\r\n                })\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n"]}